<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.library.dao.BookDAO">

	<!-- list book on main page -->
	<select id="listBestBook" resultType="com.spring.library.vo.Book">
	<![CDATA[
		SELECT A.*
		    FROM BOOK A,
		        (
		        SELECT BOOK_ID
		            FROM (
		                SELECT BOOK_ID
		                      ,COUNT(*) CNT
		                    FROM RENTAL
		                    GROUP BY BOOK_ID
		                    ORDER BY CNT DESC
		                 )
		            WHERE ROWNUM <= 6
		        ) B
		    WHERE A.BOOK_ID = B.BOOK_ID
	]]>
	</select>
	
	<!-- list new book on main page -->
	<select id="listNewBook" resultType="com.spring.library.vo.Book">
	<![CDATA[
		SELECT *
		    FROM (
		        SELECT *
		            FROM BOOK
		            ORDER BY INSERT_DATE DESC
		         )
		    WHERE ROWNUM <= 6
	]]>
	</select>
	
	<!-- detail book information -->
	<select id="bookInfo" resultType="com.spring.library.vo.Book">
		SELECT A.*
		      ,(CASE WHEN TO_DATE(B.END_DATE, 'YYYY-MM-DD') - SYSDATE >= 0 THEN 1
		      	ELSE 0 END) AS BORROWED
		      ,B.START_DATE
              ,B.END_DATE
		    FROM BOOK A
                ,(SELECT BOOK_ID
                		,START_DATE
                		,END_DATE
                    FROM
                        (SELECT BOOK_ID
                        	   ,START_DATE
                        	   ,END_DATE
                            FROM RENTAL
                            WHERE BOOK_ID = #{param1}
                            ORDER BY END_DATE DESC)
                    WHERE ROWNUM = 1) B
		    WHERE A.BOOK_ID = B.BOOK_ID(+)
		      AND A.BOOK_ID = #{param1}
	</select>
	
	<!-- search book -->
	<select id="searchBook" parameterType="com.spring.library.common.paging.Criteria" resultType="com.spring.library.vo.Book">
	<![CDATA[
		SELECT *
		    FROM (
		        SELECT A.*
		              ,ROWNUM AS RNUM
		              ,COUNT(*) OVER() AS TOTCNT
		            FROM (
		                SELECT *
		                    FROM BOOK
		                    WHERE UPPER(TITLE) LIKE '%' || UPPER(#{searchBook}) || '%'
		                ) A
		    )
		    WHERE RNUM > #{pageStart}
		      AND RNUM <= #{pageEnd}
	]]>
	</select>
	
	<!-- list all category -->
	<select id="allCategory" resultType="com.spring.library.vo.Category">
		SELECT *
			FROM CATEGORY
	</select>
	 
	 <!-- insert book -->
	<insert id="insertBook" parameterType="com.spring.library.vo.Book">
	<![CDATA[
		INSERT INTO BOOK
		(
			BOOK_ID
		   ,TITLE
		   ,AUTHOR
		   ,ISBN
		   ,PUBLISHED_DATE
		   ,PUBLISHER
		   ,PAGE
		   ,DESCRIPTION
		   ,IMAGE
		   ,CATEGORY_ID
		   ,INSERT_ID
		   ,UPDATE_ID
		   ,INSERT_DATE
		   ,UPDATE_DATE
		)
		VALUES
		(
			BOOK_SEQ.NEXTVAL
		   ,#{title}
		   ,#{author}
		   ,#{isbn}
		   ,#{published_date}
		   ,#{publisher}
		   ,#{page}
		   ,#{description}
		   ,#{image}
		   ,#{category_id}
		   ,'admin'
		   ,'admin'
		   ,SYSDATE
		   ,SYSDATE
		)
	]]>
	</insert>
	
	<!-- insert category -->
	<insert id="insertCategory" parameterType="com.spring.library.vo.Category">
	<![CDATA[
		INSERT INTO CATEGORY
		(
			CATEGORY_ID
		   ,CATEGORY_NAME
		)
		VALUES
		(
			CATEGORY_SEQ.NEXTVAL
		   ,#{category_name}
		)
	]]>
	</insert>
	
	<!-- search category -->
	<select id="searchCategory" resultType="com.spring.library.vo.Category">
		SELECT *
			FROM CATEGORY
			WHERE CATEGORY_NAME = #{category_name}
	</select>
	
	<!-- list book of category -->
	<select id="bookCategory" resultType="com.spring.library.vo.Book">
		SELECT BOOK_ID
			  ,TITLE
			  ,AUTHOR
			  ,IMAGE
			  ,CATEGORY_ID
			FROM BOOK
			WHERE CATEGORY_ID = #{param1}
	</select>
	
	<!-- sign up -->
	<insert id="createUser" parameterType="com.spring.library.vo.User">
		INSERT INTO MEMBER
		(
			USER_ID
		   ,PASSWORD
		   ,NAME
		   ,ADDRESS
		   ,POST_CODE
		   ,PHONE
		   ,USER_TYPE
		)
		VALUES
		(
			#{user_id}
		   ,#{password}
		   ,#{name}
		   ,#{address}
		   ,#{post_code}
		   ,#{phone}
		   ,'2'
		)
	</insert>
	
	<!-- sign in -->
	<select id="loginUser" resultType="com.spring.library.vo.User">
		SELECT *
			FROM MEMBER
			WHERE USER_ID = #{user_id}
	</select>
	
	<update id="updateUser" parameterType="com.spring.library.vo.User">
		UPDATE MEMBER
			SET PASSWORD = #{password}
			   ,NAME = #{name}
			   ,ADDRESS = #{address}
			   ,POST_CODE = #{post_code}
			   ,PHONE = #{phone}
			WHERE USER_ID = #{user_id}
	</update>
	
	<!-- myBook list -->
	<select id="myBookList" resultType="com.spring.library.vo.Book">
		SELECT A.START_DATE
			  ,A.END_DATE
			  ,(CASE WHEN TO_DATE(A.END_DATE, 'YYYY-MM-DD') - SYSDATE >= 0 THEN 1
		        ELSE 0 END) AS BORROWED
			  ,B.BOOK_ID
			  ,B.TITLE
			  ,B.AUTHOR
			  ,B.PUBLISHER
			  ,B.IMAGE
		    FROM RENTAL A, BOOK B
		    WHERE A.BOOK_ID = B.BOOK_ID
		      AND A.USER_ID = #{param1}
		    ORDER BY A.UPDATE_DATE DESC
	</select>
	
	<!-- borrow book -->
	<insert id="borrowBook" parameterType="java.util.HashMap">
		INSERT INTO RENTAL
		(
			RENTAL_ID
		   ,BOOK_ID
		   ,USER_ID
		   ,START_DATE
		   ,END_DATE
		   ,INSERT_DATE
		   ,UPDATE_DATE
		)
		VALUES
		(
			RENTAL_SEQ.NEXTVAL
		   ,#{book_id}
		   ,#{user_id}
		   ,TO_CHAR(SYSDATE, 'YYYY-MM-DD')
		   ,TO_CHAR(SYSDATE+14, 'YYYY-MM-DD')
		   ,TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
		   ,TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
		)
	</insert>
	
	<select id="list_all_user" resultType="com.spring.library.vo.User">
		SELECT A.*
		      ,B.TYPE_NAME
		    FROM MEMBER A,
		         USERTYPE B
		    WHERE A.USER_TYPE = B.TYPE_ID
		    ORDER BY A.NAME
	</select>
	
	<select id="userInfo" resultType="com.spring.library.vo.User">
		SELECT A.*
		      ,B.TYPE_NAME
		    FROM MEMBER A,
		         USERTYPE B
		    WHERE A.USER_TYPE = B.TYPE_ID
              AND A.USER_ID = #{param1}
	</select>
	
	<select id="userType" resultType="com.spring.library.vo.UserType">
		SELECT *
		    FROM USERTYPE
		    ORDER BY TYPE_ID
	</select>
	
	<update id="updateUserAdmin" parameterType="com.spring.library.vo.User">
		UPDATE MEMBER
			SET NAME = #{name}
			   ,ADDRESS = #{address}
			   ,POST_CODE = #{post_code}
			   ,PHONE = #{phone}
			   ,USER_TYPE = #{user_type}
			WHERE USER_ID = #{user_id}
	</update>
	
</mapper>